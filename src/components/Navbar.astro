---
interface Props {
  isTransparent?: boolean;
}

const { isTransparent = false } = Astro.props;
---

<nav class={`fixed w-full z-20 transition-colors duration-300 ${isTransparent ? 'bg-transparent' : 'bg-black'} text-white`} id="navbar">
  <div class="max-w-screen-xl px-4 mx-auto 2xl:px-0 py-4">
    <div class="flex items-center justify-between">

      <div class="flex items-center space-x-8">
        <div class="shrink-0">
          <a href="/" title="Home" class="text-2xl font-bold">VIBAASH</a>
        </div>

        <ul class="hidden lg:flex items-center justify-start gap-6 md:gap-8 py-3 sm:justify-center">
          <li class="shrink-0">
            <a href="#" title="Best Sellers" class="flex text-sm font-medium hover:text-primary-500">
              Best Sellers
            </a>
          </li>
          <li class="shrink-0">
            <a href="#" title="Gift Ideas" class="flex text-sm font-medium hover:text-primary-500">
              Gift Ideas
            </a>
          </li>
          <li class="shrink-0">
            <a href="#" title="Today's Deals" class="text-sm font-medium hover:text-primary-500">
              Today's Deals
            </a>
          </li>
        </ul>
      </div>

      <div class="flex items-center lg:space-x-2">
        <button id="myCartButton" type="button" class="inline-flex items-center rounded-lg justify-center p-2 hover:bg-gray-700 text-sm font-medium leading-none">
          <span class="sr-only">
            Cart
          </span>
          <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 4h1.5L9 16m0 0h8m-8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4Zm-8.5-3h9.25L19 7H7.312"/>
          </svg> 
        </button>

        <div class="relative">
          <button id="userDropdownButton1" type="button" class="inline-flex items-center rounded-lg justify-center p-2 hover:bg-gray-700 text-sm font-medium leading-none">
            <svg class="w-5 h-5 me-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
              <path stroke="currentColor" stroke-width="2" d="M7 17v1a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1v-1a3 3 0 0 0-3-3h-4a3 3 0 0 0-3 3Zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z"/>
            </svg>              
            Account
            <svg class="w-4 h-4 ms-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
              <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 9-7 7-7-7"/>
            </svg> 
          </button>

          <div id="userDropdown1" class="absolute right-0 mt-2 hidden z-10 w-56 divide-y divide-gray-100 rounded-lg bg-white shadow dark:divide-gray-600 dark:bg-gray-700">
            <ul class="py-2 text-sm font-medium text-gray-900 dark:text-white">
              <li><a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600">Sign in with Google</a></li>
              <li><a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600">My Orders</a></li>
              <li><a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600">Settings</a></li>
              <li><a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600">Favourites</a></li>
              <li><a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600">Delivery Addresses</a></li>
              <li><a href="#" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600">Billing Data</a></li>
            </ul>
            <div class="py-2">
              <a href="#" class="block px-4 py-2 text-sm font-medium text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-600">Sign Out</a>
            </div>
          </div>
        </div>

        <button type="button" data-collapse-toggle="ecommerce-navbar-menu-1" aria-controls="ecommerce-navbar-menu-1" aria-expanded="false" class="inline-flex lg:hidden items-center justify-center hover:bg-gray-700 rounded-md p-2">
          <span class="sr-only">
            Open Menu
          </span>
          <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
            <path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5 7h14M5 12h14M5 17h14"/>
          </svg>                
        </button>
      </div>
    </div>

    <div id="ecommerce-navbar-menu-1" class="bg-gray-800 border border-gray-700 rounded-lg py-3 hidden px-4 mt-4">
      <ul class="text-white text-sm font-medium space-y-3">
        <li>
          <a href="/" class="hover:text-primary-500">Home</a>
        </li>
        <li>
          <a href="#" class="hover:text-primary-500">Best Sellers</a>
        </li>
        <li>
          <a href="#" class="hover:text-primary-500">Gift Ideas</a>
        </li>
        <li>
          <a href="#" class="hover:text-primary-500">Today's Deals</a>
        </li>
        <li>
          <a href="#" class="hover:text-primary-500">Sell</a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const navbar = document.getElementById('navbar');
    const myCartButton = document.getElementById('myCartButton');
    const cartPanel = document.getElementById('cartPanel');
    const userDropdownButton = document.getElementById('userDropdownButton1');
    const userDropdown = document.getElementById('userDropdown1');

    // Cart functionality
    if (myCartButton && cartPanel) {
      myCartButton.addEventListener('click', function() {
        cartPanel.classList.remove('translate-x-full');
        if (typeof (window as any).updateCartPanel === 'function') {
          (window as any).updateCartPanel();
        }
      });
    }

    // Account dropdown functionality
    if (userDropdownButton && userDropdown) {
      userDropdownButton.addEventListener('click', function(event) {
        event.stopPropagation();
        userDropdown.classList.toggle('hidden');
      });

      document.addEventListener('click', function(event) {
        if (!userDropdownButton.contains(event.target as Node) && !userDropdown.contains(event.target as Node)) {
          userDropdown.classList.add('hidden');
        }
      });
    }

    // Navbar background change on scroll (only for index page)
    if (window.location.pathname === '/' || window.location.pathname === '/index.html') {
      function updateNavbarBackground() {
        if (window.scrollY > 50) {
          navbar?.classList.remove('bg-transparent');
          navbar?.classList.add('bg-black');
        } else {
          navbar?.classList.remove('bg-black');
          navbar?.classList.add('bg-transparent');
        }
      }

      window.addEventListener('scroll', updateNavbarBackground);
      updateNavbarBackground(); // Initial call
    }
  });
</script>
